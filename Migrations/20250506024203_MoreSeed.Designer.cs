// <auto-generated />
using System;
using E_learningPlatform.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_learningPlatform.Migrations
{
    [DbContext(typeof(ElearnDbContext))]
    [Migration("20250506024203_MoreSeed")]
    partial class MoreSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_learningPlatform.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Geography"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Technology"
                        },
                        new
                        {
                            Id = 5,
                            Name = "English"
                        });
                });

            modelBuilder.Entity("E_learningPlatform.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("CourseId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Available = true,
                            CategoryId = 1,
                            CourseTitle = "Physics 101",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8901),
                            Description = "Introduction to classical mechanics and thermodynamics.",
                            Image = "physics101.jpg",
                            InstructorName = "Mr. Ahmed Adel",
                            Price = 100,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8905)
                        },
                        new
                        {
                            CourseId = 4,
                            Available = true,
                            CategoryId = 1,
                            CourseTitle = "Chemistry Fundamentals",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8912),
                            Description = "Explore the basic principles of chemistry, atoms, and molecules.",
                            Image = "chemistry.jpg",
                            InstructorName = "Dr. Fatima Khalil",
                            Price = 95,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8913)
                        },
                        new
                        {
                            CourseId = 5,
                            Available = true,
                            CategoryId = 1,
                            CourseTitle = "Introduction to Biology",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8915),
                            Description = "Learn about the science of life, from cells to ecosystems.",
                            Image = "biology.jpg",
                            InstructorName = "Prof. Samira Zayd",
                            Price = 110,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8916)
                        },
                        new
                        {
                            CourseId = 6,
                            Available = true,
                            CategoryId = 1,
                            CourseTitle = "Astronomy: Exploring the Cosmos",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8919),
                            Description = "A journey through space, stars, planets, and galaxies.",
                            Image = "astronomy.jpg",
                            InstructorName = "Mr. Karim Farouk",
                            Price = 125,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8919)
                        },
                        new
                        {
                            CourseId = 7,
                            Available = true,
                            CategoryId = 1,
                            CourseTitle = "Environmental Science Basics",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8922),
                            Description = "Understanding human impact on the environment and ecosystems.",
                            Image = "environmental.jpg",
                            InstructorName = "Ms. Layla Ibrahim",
                            Price = 90,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8922)
                        },
                        new
                        {
                            CourseId = 2,
                            Available = true,
                            CategoryId = 2,
                            CourseTitle = "Calculus for Beginners",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8925),
                            Description = "Grasp the fundamentals of differential and integral calculus.",
                            Image = "calculus.jpg",
                            InstructorName = "Mr. Mohamed Ahmed",
                            Price = 80,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8926)
                        },
                        new
                        {
                            CourseId = 8,
                            Available = true,
                            CategoryId = 2,
                            CourseTitle = "Algebra Essentials",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8928),
                            Description = "Master the core concepts of algebra, including equations and functions.",
                            Image = "algebra.jpg",
                            InstructorName = "Ms. Hoda Salah",
                            Price = 75,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8929)
                        },
                        new
                        {
                            CourseId = 9,
                            Available = true,
                            CategoryId = 2,
                            CourseTitle = "Statistics and Probability",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8931),
                            Description = "Learn to analyze data and understand the principles of probability.",
                            Image = "statistics.jpg",
                            InstructorName = "Mr. Tarek Mahmoud",
                            Price = 100,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8932)
                        },
                        new
                        {
                            CourseId = 10,
                            Available = true,
                            CategoryId = 2,
                            CourseTitle = "Geometry: Shapes and Space",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8936),
                            Description = "Explore Euclidean geometry, shapes, proofs, and spatial reasoning.",
                            Image = "geometry.jpg",
                            InstructorName = "Dr. Ibrahim Youssef",
                            Price = 85,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8936)
                        },
                        new
                        {
                            CourseId = 11,
                            Available = false,
                            CategoryId = 2,
                            CourseTitle = "Trigonometry Fundamentals",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8939),
                            Description = "Understand angles, triangles, and trigonometric functions.",
                            Image = "trigonometry.jpg",
                            InstructorName = "Ms. Nadia Hassan",
                            Price = 70,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8939)
                        },
                        new
                        {
                            CourseId = 3,
                            Available = true,
                            CategoryId = 3,
                            CourseTitle = "Introduction to Physical Geography",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8942),
                            Description = "Explore Earth's landforms, climate, and natural processes.",
                            Image = "physical_geography.jpg",
                            InstructorName = "Dr. Hassan Fares",
                            Price = 110,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8943)
                        },
                        new
                        {
                            CourseId = 12,
                            Available = true,
                            CategoryId = 3,
                            CourseTitle = "World Regional Geography",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8945),
                            Description = "A survey of the world's major cultural and physical regions.",
                            Image = "world_regions.jpg",
                            InstructorName = "Prof. Mona Said",
                            Price = 115,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8946)
                        },
                        new
                        {
                            CourseId = 13,
                            Available = true,
                            CategoryId = 3,
                            CourseTitle = "Introduction to GIS",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8948),
                            Description = "Learn the basics of Geographic Information Systems and mapping.",
                            Image = "gis_intro.jpg",
                            InstructorName = "Eng. Karim Ismail",
                            Price = 135,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8949)
                        },
                        new
                        {
                            CourseId = 14,
                            Available = true,
                            CategoryId = 3,
                            CourseTitle = "Urban Geography",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8951),
                            Description = "Study the spatial structure and development of cities.",
                            Image = "urban_geography.jpg",
                            InstructorName = "Dr. Hassan Fares",
                            Price = 120,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8952)
                        },
                        new
                        {
                            CourseId = 15,
                            Available = true,
                            CategoryId = 3,
                            CourseTitle = "Climatology Basics",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8954),
                            Description = "Understanding weather patterns, climate zones, and climate change.",
                            Image = "climatology.jpg",
                            InstructorName = "Ms. Salwa Ali",
                            Price = 110,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8955)
                        },
                        new
                        {
                            CourseId = 16,
                            Available = true,
                            CategoryId = 4,
                            CourseTitle = "Introduction to Python Programming",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8957),
                            Description = "Learn the fundamentals of programming using Python.",
                            Image = "python_intro.jpg",
                            InstructorName = "Eng. Omar Sharif",
                            Price = 150,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(8958)
                        },
                        new
                        {
                            CourseId = 17,
                            Available = true,
                            CategoryId = 4,
                            CourseTitle = "Web Development Basics (HTML, CSS, JS)",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9010),
                            Description = "Build your first websites using core web technologies.",
                            Image = "webdev_basics.jpg",
                            InstructorName = "Ms. Reem Abbas",
                            Price = 140,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9011)
                        },
                        new
                        {
                            CourseId = 18,
                            Available = true,
                            CategoryId = 4,
                            CourseTitle = "Cybersecurity Fundamentals",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9014),
                            Description = "Understand the basics of cybersecurity threats and defenses.",
                            Image = "cybersecurity.jpg",
                            InstructorName = "Mr. Ali Mansour",
                            Price = 160,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9014)
                        },
                        new
                        {
                            CourseId = 19,
                            Available = true,
                            CategoryId = 4,
                            CourseTitle = "Data Science Essentials",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9017),
                            Description = "An introduction to data analysis, visualization, and machine learning concepts.",
                            Image = "datascience.jpg",
                            InstructorName = "Dr. Zainab Dawoud",
                            Price = 175,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9017)
                        },
                        new
                        {
                            CourseId = 20,
                            Available = true,
                            CategoryId = 4,
                            CourseTitle = "Cloud Computing with AWS",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9020),
                            Description = "Learn the basics of cloud services using Amazon Web Services.",
                            Image = "aws_cloud.png",
                            InstructorName = "Eng. Rami Said",
                            Price = 180,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9020)
                        },
                        new
                        {
                            CourseId = 21,
                            Available = true,
                            CategoryId = 5,
                            CourseTitle = "English Grammar Essentials",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9023),
                            Description = "Master the core rules of English grammar and punctuation.",
                            Image = "grammar.jpg",
                            InstructorName = "Ms. Sarah Jones",
                            Price = 90,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9023)
                        },
                        new
                        {
                            CourseId = 22,
                            Available = true,
                            CategoryId = 5,
                            CourseTitle = "Creative Writing: Fiction & Poetry",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9026),
                            Description = "Develop your skills in writing compelling stories and poems.",
                            Image = "creative_writing.jpg",
                            InstructorName = "Mr. David Miller",
                            Price = 85,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9026)
                        },
                        new
                        {
                            CourseId = 23,
                            Available = true,
                            CategoryId = 5,
                            CourseTitle = "Advanced English Composition",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9029),
                            Description = "Learn techniques for crafting effective essays and reports.",
                            Image = "composition.jpg",
                            InstructorName = "Dr. Emily White",
                            Price = 95,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9029)
                        },
                        new
                        {
                            CourseId = 24,
                            Available = true,
                            CategoryId = 5,
                            CourseTitle = "Business English Communication",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9032),
                            Description = "Improve your professional writing and speaking skills.",
                            Image = "business_english.jpg",
                            InstructorName = "Mr. John Smith",
                            Price = 110,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9033)
                        },
                        new
                        {
                            CourseId = 25,
                            Available = true,
                            CategoryId = 5,
                            CourseTitle = "Survey of English Literature",
                            CreatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9035),
                            Description = "Explore major authors and works from Old English to Modern.",
                            Image = "english_literature.jpg",
                            InstructorName = "Prof. Laura Brown",
                            Price = 100,
                            UpdatedAt = new DateTime(2025, 5, 6, 2, 42, 2, 942, DateTimeKind.Utc).AddTicks(9036)
                        });
                });

            modelBuilder.Entity("E_learningPlatform.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("courseId")
                        .HasColumnType("int");

                    b.Property<int>("lessonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("courseId");

                    b.HasIndex("lessonId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("E_learningPlatform.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("E_learningPlatform.Models.lesson", b =>
                {
                    b.Property<int>("lessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("lessonId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("courseId")
                        .HasColumnType("int");

                    b.Property<string>("lessonContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lessonDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lessonTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lessonVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("lessonId");

                    b.HasIndex("courseId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("E_learningPlatform.Models.Course", b =>
                {
                    b.HasOne("E_learningPlatform.Models.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("E_learningPlatform.Models.Exam", b =>
                {
                    b.HasOne("E_learningPlatform.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("courseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_learningPlatform.Models.lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("lessonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("E_learningPlatform.Models.lesson", b =>
                {
                    b.HasOne("E_learningPlatform.Models.Course", "Course")
                        .WithMany("lessons")
                        .HasForeignKey("courseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("E_learningPlatform.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("E_learningPlatform.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_learningPlatform.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("E_learningPlatform.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_learningPlatform.Models.Category", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("E_learningPlatform.Models.Course", b =>
                {
                    b.Navigation("lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
