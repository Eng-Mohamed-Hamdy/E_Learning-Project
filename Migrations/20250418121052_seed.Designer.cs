// <auto-generated />
using System;
using E_learningPlatform.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_learningPlatform.Migrations
{
    [DbContext(typeof(ElearnDbContext))]
    [Migration("20250418121052_seed")]
    partial class seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_learningPlatform.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = 3,
                            Name = "History"
                        });
                });

            modelBuilder.Entity("E_learningPlatform.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("CourseId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Available = true,
                            CategoryId = 1,
                            CourseTitle = "Physics 101",
                            CreatedAt = new DateTime(2025, 4, 18, 14, 10, 52, 338, DateTimeKind.Local).AddTicks(412),
                            Description = "Introduction to Physics",
                            Image = "physics101.jpg",
                            Price = 100,
                            UpdatedAt = new DateTime(2025, 4, 18, 14, 10, 52, 338, DateTimeKind.Local).AddTicks(489)
                        },
                        new
                        {
                            CourseId = 2,
                            Available = true,
                            CategoryId = 2,
                            CourseTitle = "Calculus for Beginners",
                            CreatedAt = new DateTime(2025, 4, 18, 14, 10, 52, 338, DateTimeKind.Local).AddTicks(497),
                            Description = "Learn the basics of Calculus",
                            Image = "calculus.jpg",
                            Price = 80,
                            UpdatedAt = new DateTime(2025, 4, 18, 14, 10, 52, 338, DateTimeKind.Local).AddTicks(499)
                        },
                        new
                        {
                            CourseId = 3,
                            Available = true,
                            CategoryId = 3,
                            CourseTitle = "World History",
                            CreatedAt = new DateTime(2025, 4, 18, 14, 10, 52, 338, DateTimeKind.Local).AddTicks(502),
                            Description = "A comprehensive look at World History",
                            Image = "history.jpg",
                            Price = 120,
                            UpdatedAt = new DateTime(2025, 4, 18, 14, 10, 52, 338, DateTimeKind.Local).AddTicks(504)
                        });
                });

            modelBuilder.Entity("E_learningPlatform.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("courseId")
                        .HasColumnType("int");

                    b.Property<int>("lessonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("courseId");

                    b.HasIndex("lessonId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("E_learningPlatform.Models.lesson", b =>
                {
                    b.Property<int>("lessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("lessonId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("courseId")
                        .HasColumnType("int");

                    b.Property<string>("lessonContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lessonDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lessonTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lessonVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("lessonId");

                    b.HasIndex("courseId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("E_learningPlatform.Models.Course", b =>
                {
                    b.HasOne("E_learningPlatform.Models.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("E_learningPlatform.Models.Exam", b =>
                {
                    b.HasOne("E_learningPlatform.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("courseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_learningPlatform.Models.lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("lessonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("E_learningPlatform.Models.lesson", b =>
                {
                    b.HasOne("E_learningPlatform.Models.Course", "Course")
                        .WithMany("lessons")
                        .HasForeignKey("courseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("E_learningPlatform.Models.Category", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("E_learningPlatform.Models.Course", b =>
                {
                    b.Navigation("lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
