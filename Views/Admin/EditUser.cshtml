@model EditUserViewModel

@{
    ViewData["Title"] = "Edit User";
}

<div class="container mt-4">
    <h2>Edit User</h2>
    <hr />

    <form asp-action="EditUser">
        <input type="hidden" asp-for="Id" />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <!-- Username -->
        <div class="form-group mb-3">
            <label asp-for="UserName" class="control-label"></label>
            <input asp-for="UserName" class="form-control" />
            <span asp-validation-for="UserName" class="text-danger"></span>
        </div>

        <!-- Email -->
        <div class="form-group mb-3">
            <label asp-for="Email" class="control-label"></label>
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>

        <!-- Role Selection -->
        <div class="form-group mb-3">
            <label class="control-label">Roles</label>
            <div class="row">
                @foreach (var role in ViewBag.AllRoles)
                {
                    <div class="col-md-4">
                        <div class="form-check">
                            <input class="form-check-input"
                                   type="checkbox"
                                   name="SelectedRoles"
                                   value="@role"
                            @(Model.Roles.Contains(role) ? "checked" : "") />
                            <label class="form-check-label">@role</label>
                        </div>
                    </div>
                }
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Save Changes</button>
        <a asp-action="Users" class="btn btn-secondary">Cancel</a>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}